version: 2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

jobs:

  unittests:
    docker:
      - image: circleci/python:2.7.15-stretch
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: sudo python get-pip.py
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env && source env/bin/activate
      - run:
          name: install tox
          command: pip install --user tox
      - run: /home/circleci/.local/bin/tox -e flake8
      - run: /home/circleci/.local/bin/tox -e py27

  wagon:
    docker:
      - image: amd64/centos:centos7.3.1611
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yum -y install python-devel gcc openssl git libxslt-devel libxml2-devel openldap-devel libffi-devel openssl-devel libvirt-devel
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: python get-pip.py
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip==9.0.1
      - run:
          name: Install virtualenv
          command: pip install virtualenv==15.1.0
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: Install wagon
          command: pip install wagon==0.3.2
      - run:
          name: many_linux
          command: echo "manylinux1_compatible = False" > "env/bin/_manylinux.py"
      - run:
          name: make workspace
          command: mkdir -p workspace/build
      - run:
          name: Create wagon
          command: source env/bin/activate && wagon create -s . -v -o workspace/build -f -a '--no-cache-dir -c constraints.txt'
      - persist_to_workspace:
          root: workspace
          paths:
            - build/*

  cloudify-manager:
    machine:
      image: ubuntu-1604:201903-01
      enabled: true
      python:
        version: pypy-2.2.1
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - attach_workspace:
          at: workspace
      - run:
          name: Download cloudify cli 5.0.0
          command: |
            wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-cli_5.0.0~ga_amd64.deb
      - run:
          name: Install cloudify cli 5.0.0
          command: |
            sudo dpkg -i cloudify-cli_5.0.0~ga_amd64.deb
      - run:
          name: Retain space by dumping the deb
          command: sudo rm cloudify-cli_5.0.0~ga_amd64.deb
      - run:
          name: Download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-docker-manager-5.0.0.tar
      - run:
          name: Load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: Retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: Start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: Init CLI profile
          command: |
            counter=0
            until [ $counter -ge 10 ]
            do
                cfy profiles use localhost -u admin -p admin -t default_tenant && break
                counter=$[$counter+1]
                sleep 2
            done
      - run:
          name: Upload license to manager to use it
          command: |
            set +x
            echo ${TEST_LICENSE} | base64 --decode > license.yaml
            set -x
            cfy license upload license.yaml
      - run:
          name: Install plugins bundle
          command: cfy plugins bundle-upload
      - run:
          name: Install updated openstack
          command: cfy plugins upload http://repository.cloudifysource.org/cloudify/wagons/cloudify-openstack-plugin/3.2.2/cloudify_openstack_plugin-3.2.2-py27-none-linux_x86_64-centos-Core.wgn -y http://www.getcloudify.org/spec/openstack-plugin/3.2.2/plugin.yaml || true
      - run:
          name: Wagon upload
          command: cfy plugins upload workspace/build/cloudify_docker_plugin-*-py27-none-linux_x86_64-centos-Core.wgn -y plugin.yaml || true

  release:
    docker:
      - image: circleci/python:2.7.15-stretch
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: sudo python get-pip.py
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install tox
          command: pip install --user pygithub pyyaml==3.10
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: python .circleci/package_release.py

workflows:
  version: 2
  tests:
    jobs:
      - unittests
      - wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - release:
          context: ecosystem
          filters:
            branches:
              only: /master/
      - cloudify-manager:
          context: ecosystem
          requires:
            - unittests
            - wagon
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
